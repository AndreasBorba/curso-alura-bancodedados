-- ARREDONDAR
SELECT ROUND(3.4) AS ARREDONDAR FROM DUAL;
SELECT ROUND(3.6) AS ARREDONDAR FROM DUAL;

-- TRUNCAR
SELECT TRUNC(3.4) AS TRUNCAR FROM DUAL;
SELECT TRUNC(3.6) AS TRUNCAR FROM DUAL;

-- FLOOR E TRUNC TEM RESULTADO PARECIDOS
SELECT FLOOR(3.4) AS FLOOR FROM DUAL;
SELECT FLOOR(3.6) AS FLOOR FROM DUAL;

-- CEIL ARREDONDA INDEPENDENTE DA CASA DECIMAL
SELECT CEIL(3.4) AS CEIL FROM DUAL;
SELECT CEIL(3.6) AS CEIL FROM DUAL;

-- POWER É IGUAL A POTENCIACAO
SELECT POWER(2, 2) AS POTENCIACAO FROM DUAL;
SELECT POWER(10, 2) AS POTENCIACAO FROM DUAL;

-- EXP, 2.7 ELEVADO AO EXPOENTE DEFINIDO
SELECT EXP(2) FROM DUAL;

-- RAIZ QUADRADA
SELECT SQRT(36) AS RAIZ_QUADRADA FROM DUAL;

-- RETORNA SE O NUMERO É POSITIVO OU NÃO
-- 1 POSITIVO
-- -1 NEGATIVO

SELECT SIGN(10) AS SIGN FROM DUAL;
SELECT CASE WHEN SIGN(-10) = 1 THEN 'POSITIVO' ELSE 'NEGATIVO' END AS SIGN FROM DUAL;

-- TRNASFORMA UM NUMERO EM POSITIVO
SELECT ABS(-1000) AS ABS FROM DUAL;

-- RESTO DA DIVISAO
SELECT MOD(10, 6) AS RESTO_DIVISAO FROM DUAL;

SELECT * FROM NOTAS_FISCAIS;
SELECT * FROM ITENS_NOTAS_FISCAIS;

SELECT 'R$ ' || FLOOR(SUM(IMPOSTO)) AS TOTAL_IMPOSTO, 'R$ ' || FLOOR(SUM(QUANTIDADE)) AS QUANTIDADE_TOTAL, 'R$ ' || FLOOR(SUM(PRECO)) AS PRECO_TOTAL
FROM NOTAS_FISCAIS N
INNER JOIN ITENS_NOTAS_FISCAIS I
ON N.NUMERO = I.NUMERO
WHERE TO_CHAR(N.DATA_VENDA, 'YYYY') = '2016'
GROUP BY TO_CHAR(N.DATA_VENDA, 'YYYY');