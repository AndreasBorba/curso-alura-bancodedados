CREATE TABLE TAB_FATURAMENTO(
    DATA_VENDA DATE NULL,
    TOTAL_VENDA FLOAT
);

SELECT * FROM ITENS_NOTAS;
SELECT * FROM NOTAS;
SELECT * FROM CLIENTE;
SELECT * FROM VENDEDORES;
SELECT * FROM ITENS_NOTAS;
SELECT * FROM ITENS_NOTAS_FISCAIS;
SELECT * FROM NOTAS_FISCAIS;
SELECT * FROM TAB_FATURAMENTO;

SELECT * FROM TAB_FATURAMENTO WHERE TOTAL_VENDA = (SELECT MAX(TOTAL_VENDA) FROM TAB_FATURAMENTO);

INSERT INTO NOTAS (SELECT NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO FROM NOTAS_FISCAIS);

DELETE ITENS_NOTAS;
INSERT INTO ITENS_NOTAS (SELECT NUMERO, CODIGO_DO_PRODUTO AS CODIGO, QUANTIDADE, PRECO FROM ITENS_NOTAS_FISCAIS);

INSERT INTO NOTAS (NUMERO, DATA_VENDA, CPF, MATRICULA, IMPOSTO) VALUES ('0100', TO_DATE('2019/01/01', 'YYYY/MM/DD'), '1478662710', '00235', 0.10);

INSERT INTO ITENS_NOTAS (NUMERO, CODIGO, QUANTIDADE, PRECO) VALUES ('1101', '104107', 10000, 1000);

SELECT N.DATA_VENDA, SUM(I.QUANTIDADE * I.PRECO) AS TOTAL_VENDA
FROM NOTAS N INNER JOIN ITENS_NOTAS I
ON N.NUMERO = I.NUMERO
GROUP BY N.DATA_VENDA;

-- PODE SER UTILIZADO BEFORE E AFTER
CREATE OR REPLACE TRIGGER TG_TAB_FATURAMENTO
AFTER INSERT OR UPDATE OR DELETE ON ITENS_NOTAS
BEGIN
DELETE FROM TAB_FATURAMENTO;
INSERT INTO TAB_FATURAMENTO
(SELECT N.DATA_VENDA, SUM(I.QUANTIDADE * I.PRECO) AS TOTAL_VENDA FROM NOTAS N INNER JOIN ITENS_NOTAS I ON N.NUMERO = I.NUMERO GROUP BY N.DATA_VENDA);
END;

